services:
  pbx_postgres:
    container_name: pbx_postgres
    image: postgres:17
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fusion_pbx_db}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-12345678}
      POSTGRES_USER: ${POSTGRES_USER:-fusionpbx}
    ports:
      - 5432:5432
    volumes:
      - fusionpbxdata:/var/lib/postgresql/data
    networks:
      - fusionpbx_internal
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-fusionpbx} -d ${POSTGRES_DB:-fusion_pbx_db}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  pbx_pgadmin:
    container_name: pbx_pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-12345678}
    ports:
      - 5050:80
    networks:
      - fusionpbx_internal
    depends_on:
      pbx_postgres:
        condition: service_healthy
    profiles:
      - tools

  pbx_nginx:
    image: nginx:stable
    container_name: pbx_nginx
    restart: always
    ports:
      - 8080:80
      - 443:443
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - fusionpbx_:/var/www/fusionpbx:ro
      - nginx_logs:/var/log/nginx
    networks:
      - fusionpbx_edge
      - fusionpbx_internal

  # Setup IPTables
  pbx_firewall:
    container_name: pbx_firewall
    build:
      context: ./iptables
    network_mode: "service:pbx_nginx"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    depends_on: [pbx_nginx]

  pbx_sngrep:
    container_name: pbx_sngrep
    build:
      context: ./sngrep
    network_mode: "service:pbx_nginx"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    tty: true
    stdin_open: true
    profiles:
      - tools
    command: ["sngrep", "-O", "/tmp/captures"]

  pbx_fusionpbx:
    container_name: pbx_fusion
    build: ./fusionpbx
    restart: "always"
    volumes:
      # This is where FusionPBX code will live, persisted, and shared to nginx
      - fusionpbx_:/var/www/fusionpbx
      # Feed only config.sh, like you insisted
      - ./fusionpbx/config.sh:/docker/config.sh:ro
    networks:
      - fusionpbx_internal
    healthcheck:
      test: ["CMD-SHELL", "test -f /var/www/fusionpbx/index.php"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 30s

    environment:
      DATABASE_HOST: ${POSTGRES_HOST:-pbx_postgres}
      DATABASE_PORT: ${POSTGRES_PORT:-5432}
      DATABASE_NAME: ${POSTGRES_DB:-fusionpbx}
      DATABASE_USERNAME: ${POSTGRES_USER:-fusionpbx}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-12345678}
      SYSTEM_BRANCH: master
      FUSIONPBX_COOKIE_SECURE: "false" # flip to true when behind TLS

  pbx_freeswitch:
    container_name: pbx_freeswitch
    build: ./freeswitch
    restart: no
    environment:
      TZ: ${TZ:-UTC}
      FS_BIN: ${FS_BIN:-/usr/bin/freeswitch}
      FS_ETC: ${FS_ETC:-/etc/freeswitch}
      FS_VAR: ${FS_VAR:-/var/lib/freeswitch}
      FS_LOG: ${FS_LOG:-/var/log/freeswitch}
      FS_USER: ${FS_USER:-www-data}
      FS_GROUP: ${FS_GROUP:-www-data}
      FS_FOREGROUND: ${FS_FOREGROUND:-1}
      FS_DEBUG: ${FS_DEBUG:-1}
      FS_CONF_SOURCE: ${FS_CONF_SOURCE:-/opt/freeswitch/defaults}
      # Optional: mount a folder with your conf to seed on first run
      # FS_DEFAULTS_DIR: /opt/freeswitch/defaults
    ulimits:
      nofile: { soft: 200000, hard: 200000 }
      memlock: { soft: -1, hard: -1 }
      rtprio: 99
    cap_add: [SYS_NICE, IPC_LOCK, SYS_RESOURCE]
    security_opt:
      - no-new-privileges:false
    ports:
      - "5060:5060/udp"
      - "5060:5060/tcp"
      - "5080:5080/udp"
      - "5080:5080/tcp"
      - "8021:8021/tcp"
      - "30000-30100:30000-30100/udp" # <<< small RTP window
    volumes:
      - ./freeswitch/defaults:/etc/freeswitch # named volume, empty on first run
      - fs_var:/var/lib/freeswitch
      - fs_logs:/var/log/freeswitch
  pbx_fail2ban:
    container_name: pbx_fail2ban
    build:
      context: ./fail2ban
    # Share the network namespace with nginx so bans hit the ingress
    network_mode: "service:pbx_nginx"
    depends_on:
      - pbx_nginx
      - pbx_freeswitch
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: always
    # Read logs from FS and nginx; persist fail2ban state if you care
    volumes:
      - fs_logs:/var/log/freeswitch:ro
      - nginx_logs:/var/log/nginx:ro
      - fail2ban_data:/var/lib/fail2ban
      - fusionpbx_:/var/www:ro
      # uncomment if you want to live-edit jails on the host:
      - ./fail2ban/jail.local:/etc/fail2ban/jail.local:ro
    # Optional tweaks at runtime
    environment:
      TZ: ${TZ:-UTC}
      DISABLE_RSYSLOG: "1"
      DISABLE_SSHD: "1"
    # Healthcheck so you know when it’s not just pretending
    healthcheck:
      test: ["CMD-SHELL", "fail2ban-client ping >/dev/null 2>&1"]
      interval: 30s
      timeout: 5s
      retries: 10

volumes:
  fusionpbx_:
  fusionpbxdata:
  fs_var:
  fs_logs:
  nginx_logs: # <— new, for nginx logs
  fail2ban_data: # <— optional, keeps ban history between restarts

networks:
  fusionpbx_edge:
    driver: bridge # public-facing for nginx only
  fusionpbx_internal:
    driver: bridge # private app mesh
